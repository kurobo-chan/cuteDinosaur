:root {
  /* Colors: */
  --hero-text: #2e0000;
  --white: #ffffff;
  --p-dark: #c7c7c7;
  --primary: #fafafa;
  --p-text: #616161;
  /* Font/text values */
  --notoJP: "Noto Sans JP", sans-serif;
  --nunito: "Nunito", sans-serif;
  --walterTurncoat: "Walter Turncoat", cursive;
  --eyecatchTitleFont: clamp(var(--f5), 7.9vw, 61px);
  --siteName: clamp(48px, 10vw, 77px);
  --f1: 2.44rem;
  --f5f1: clamp(var(--f5), 5vw, var(--f1));
  --f2: 1.95rem;
  --f3: 1.56rem;
  --f4f3: clamp(var(--f4), 3.2vw, var(--f3));
  --f4: 1.25rem;
  --f5HalfUp: 1.125rem;
  --f5: 1rem;
  --f6HalfUpf5: clamp(var(--f6HalfUp), 2vw, var(--f5));
  --f6HalfUp: 0.875rem;
  --f6: 0.8rem;
  --f7: 0.64rem;
  --f8: 0.5rem;
  --layoutSpaceHorizontal: 8vw;
  --layoutSpaceVertical: 40px;
  --layoutMinWidth: calc(100vw - var(--layoutSpaceHorizontal) * 2);
  --layoutMaxWidth: 1088px;
}

/* grid */
.partsGrid {
  display: grid;
  grid-template-columns: 1fr min(var(--layoutMinWidth), var(--layoutMaxWidth)) 1fr;
}

.partsGrid > * {
  grid-column: 2;
}

.grid12 {
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  -moz-column-gap: 10px;
       column-gap: 10px;
}

.grid12 > * {
  grid-column: 1/-1;
}

/* Spacing */
.spacing {
  padding: calc(2 * var(--layoutSpaceVertical)) 0;
}

/* Base */
* {
  margin: 0;
  padding: 0;
  list-style: none;
}

.sr-only {
  clip: rect(0 0 0 0);
  position: absolute;
  width: 1px;
  height: 1px;
  margin: -1px;
  padding: 0;
  overflow: hidden;
  border: 0;
}

img {
  width: 100%;
  -o-object-fit: cover;
     object-fit: cover;
  vertical-align: bottom;
}

a {
  color: inherit;
  text-decoration: none;
}

button {
  padding: 0;
  border: none;
  outline: none;
  background: transparent;
  cursor: pointer;
}

body {
  color: var(--p-text);
  font-size: var(--f5);
  font-family: var(--notoJP);
}

.back {
  background: var(--primary);
}
.back > * {
  background: var(--white);
}

.siteName {
  display: block;
  padding: calc(var(--layoutSpaceVertical) / 2) 0;
  font-size: var(--siteName);
  font-family: var(--walterTurncoat);
  text-align: center;
}

.navBtnBlock {
  display: grid;
  grid-auto-flow: column;
  align-items: center;
  justify-content: space-between;
  padding: calc(var(--layoutSpaceVertical) / 2) 0;
  border-bottom: var(--p-dark) solid 1px;
  font-weight: 700;
  font-size: var(--f6);
  font-family: var(--nunito);
}

.navBtn {
  display: grid;
  place-items: center;
  width: 20px;
}
.navBtn *,
.navBtn *::after,
.navBtn *::before {
  width: 100%;
}
.navBtn .hamburger-box {
  height: 20px;
}
.navBtn .hamburger-inner,
.navBtn .hamburger-inner::before,
.navBtn .hamburger-inner::after {
  height: 2px;
  background: var(--p-dark);
}
.navBtn .hamburger-inner::after {
  bottom: -5px;
}
.navBtn .hamburger-inner::before {
  top: -5px;
}

html,
body {
  overflow-x: hidden;
}

.header {
  position: relative;
}

.accordion {
  cursor: pointer;
}
.accordion .fa-chevron-down {
  margin-left: 10px;
  transform: rotate(-90deg);
  transition: 0.3s;
}
.accordion .navWorkBlok {
  display: none;
  row-gap: 1em;
  margin-top: 1em;
  margin-left: 1em;
  transition: 0.5s;
}

.accordion.accOpen .fa-chevron-down {
  transform: rotate(0);
}
.accordion.accOpen .navWorkBlok {
  display: grid;
}

.headerNav {
  box-sizing: border-box;
  z-index: 1000;
  position: absolute;
  left: 0;
  width: 100%;
  height: 0;
  padding: 0 1em;
  overflow: hidden;
  background: var(--white);
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
  font-weight: 700;
  font-size: var(--f6HalfUp);
  transition: 0.5s;
}
.headerNav > ul {
  display: grid;
  row-gap: 1em;
}

.open .headerNav {
  box-sizing: border-box;
  height: auto;
  padding: calc(var(--layoutSpaceVertical) / 2) 1em;
  transform: translateY(20px);
}

.hero {
  position: relative;
  padding: var(--layoutSpaceVertical) 0;
}
.hero h1 {
  position: absolute;
  top: 24.7%;
  left: 27%;
  color: var(--hero-text);
  font-size: var(--eyecatchTitleFont);
  font-family: var(--walterTurncoat);
  text-align: center;
}
.hero .eyecatch {
  height: 56vw;
}
.hero .eyecatch img {
  height: 100%;
}

.menu .container {
  row-gap: calc(var(--layoutSpaceVertical) / 2);
  padding-bottom: var(--layoutSpaceVertical);
  border-bottom: 1px solid var(--p-text);
}
.menu article {
  position: relative;
}
.menu h3 {
  position: absolute;
  top: 50%;
  left: 50%;
  padding: 0.4em 1em;
  transform: translate(-50%, -50%);
  background: var(--white);
  font-size: var(--f4f3);
  font-family: var(--walterTurncoat);
  text-align: center;
}
.menu figure {
  height: 50vw;
}
.menu figure img {
  height: 100%;
}

.msg .container {
  row-gap: calc(var(--layoutSpaceVertical) / 2);
  padding: var(--layoutSpaceVertical) var(--layoutSpaceHorizontal);
  border-bottom: 1px solid var(--p-text);
  text-align: center;
}
.msg h2 {
  font-size: var(--f1);
  font-family: var(--walterTurncoat);
}
.msg h3 {
  font-size: var(--f4);
  font-family: var(--nunito);
}
.msg p {
  font-size: var(--f6HalfUpf5);
  line-height: 1.8;
}
.msg .button {
  padding: 5px 1em;
  background: var(--p-dark);
  font-weight: var(--nunito);
  font-size: var(--f5);
  line-height: 1;
}

.gallery .container {
  row-gap: 10px;
  padding: var(--layoutSpaceVertical) var(--layoutSpaceHorizontal);
  border-bottom: 1px solid var(--p-text);
}
.gallery h2 {
  margin-bottom: 10px;
  font-size: var(--f5f1);
  font-family: var(--walterTurncoat);
}
.gallery figure {
  grid-column: span 2;
  height: calc(56vw / 2);
}
.gallery figure img {
  height: 100%;
}

.footer {
  font-weight: 900;
  font-size: var(--f5HalfUp);
  font-family: var(--nunito);
}
.footer .container {
  padding: var(--layoutSpaceVertical) var(--layoutSpaceHorizontal);
}
.footer .container > ul {
  display: grid;
  grid-template-columns: 1fr auto;
  justify-self: stretch;
  gap: calc(var(--layoutSpaceVertical) / 2);
}
.footer .sns {
  display: grid;
  row-gap: 0.5em;
  margin-top: 10px;
  font-size: var(--f6HalfUp);
  line-height: 1;
}

/*JS*/

@media (min-width: 768px) {
  .grid12 {
    grid-template-columns: repeat(12, 1fr);
    -moz-column-gap: 16px;
         column-gap: 16px;
  }
  .spacing {
    padding: calc(4 * var(--layoutSpaceVertical)) 0;
  }
  .siteName {
    padding: 0;
    transition: all 0.4s ease-in-out;
  }
  .navBtnBlock {
    display: none;
    padding-top: 0;
  }
  .header {
    display: grid;
    z-index: 1000;
    row-gap: 20px;
    row-gap: 20px;
    padding: var(--layoutSpaceVertical) 0;
    background: var(--white);
    transition: all 0.4s ease-in-out;
  }
  .accordion .navWorkBlok {
    visibility: hidden;
    padding: 1em;
    background: var(--white);
    box-shadow: 0 0 6px #00000053;
    opacity: 0;
    pointer-events: none;
  }
  .accordion.accOpen .navWorkBlok {
    visibility: visible;
    position: absolute;
    opacity: 1;
    pointer-events: auto;
  }
  .headerNav {
    visibility: visible;
    position: initial;
    height: auto;
    padding: 0;
    overflow: auto;
    background: transparent;
    box-shadow: none;
    font-weight: 400;
    text-transform: uppercase;
  }
  .headerNav > ul {
    grid-auto-flow: column;
    -moz-column-gap: 2em;
         column-gap: 2em;
    place-content: center;
  }
  .hero {
    padding: calc(var(--layoutSpaceVertical) * 2) 0;
  }
  .menu .container {
    padding-bottom: calc(var(--layoutSpaceVertical) * 2);
  }
  .menu article {
    grid-column: span 4;
  }
  .menu figure {
    height: calc(50vw / 2);
  }
  .msg .container {
    padding: calc(var(--layoutSpaceVertical) * 2) 0;
  }
  .msg .container > * {
    grid-column: 4/-4;
  }
  .gallery .container {
    padding: calc(var(--layoutSpaceVertical) * 2) 0;
  }
  .gallery h2 {
    margin-bottom: 30px;
  }
  .gallery figure {
    grid-column: span 3;
    height: calc(56vw / 4);
  }
  .footer .container {
    padding: calc(var(--layoutSpaceVertical) * 2) 0;
  }
  .footer .container > ul {
    grid-template-columns: auto;
    grid-auto-flow: column;
    grid-column: 4/-4;
    justify-content: space-between;
  }
  .fixed {
    z-index: 1000;
    position: fixed;
    top: 0;
    width: 100%;
    padding: 20px;
    box-shadow: 0 0 6px #00000053;
  }
  .fixed .siteName {
    font-size: 25px;
  }
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
